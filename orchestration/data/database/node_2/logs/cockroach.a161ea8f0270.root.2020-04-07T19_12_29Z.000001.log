I200407 19:12:29.231490 1 util/log/clog.go:1196  [config] file created at: 2020/04/07 19:12:29
I200407 19:12:29.231490 1 util/log/clog.go:1196  [config] running on machine: a161ea8f0270
I200407 19:12:29.231490 1 util/log/clog.go:1196  [config] binary: CockroachDB CCL v19.2.5 (x86_64-unknown-linux-gnu, built 2020/03/16 18:27:12, go1.12.12)
I200407 19:12:29.231490 1 util/log/clog.go:1196  [config] arguments: [/cockroach/cockroach start --insecure --join=database_1]
I200407 19:12:29.231490 1 util/log/clog.go:1196  line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=âœ“
I200407 19:12:29.231330 1 cli/start.go:1144  logging to directory /cockroach/cockroach-data/logs
W200407 19:12:29.282265 1 cli/start.go:1182  RUNNING IN INSECURE MODE!

- Your cluster is open for any client that can access <all your IP addresses>.
- Any user, even root, can log in without providing a password.
- Any user, connecting as root, can read or write any data in your cluster.
- There is no network encryption nor authentication, and thus no confidentiality.

Check out how to secure your cluster: https://www.cockroachlabs.com/docs/v19.2/secure-a-cluster.html
I200407 19:12:29.283445 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 2.9 GiB instead: 
W200407 19:12:29.287549 1 cli/start.go:1052  Using the default setting for --cache (128 MiB).
  A significantly larger value is usually needed for good performance.
  If you have a dedicated server a reasonable setting is --cache=.25 (749 MiB).
I200407 19:12:29.288510 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 2.9 GiB instead: 
W200407 19:12:29.288614 1 cli/start.go:1065  Using the default setting for --max-sql-memory (128 MiB).
  A significantly larger value is usually needed in production.
  If you have a dedicated server a reasonable setting is --max-sql-memory=.25 (749 MiB).
I200407 19:12:29.289234 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 2.9 GiB instead: 
I200407 19:12:29.289358 1 cli/start.go:1196  CockroachDB CCL v19.2.5 (x86_64-unknown-linux-gnu, built 2020/03/16 18:27:12, go1.12.12)
I200407 19:12:29.961537 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 2.9 GiB instead: 
I200407 19:12:29.961613 1 server/config.go:394  system total memory: 2.9 GiB
I200407 19:12:29.961703 1 server/config.go:396  server configuration:
max offset             500000000
cache size             128 MiB
SQL memory pool size   128 MiB
scan interval          10m0s
scan min idle time     10ms
scan max idle time     1s
event log enabled      true
I200407 19:12:29.961764 1 cli/start.go:1030  using local environment variables: COCKROACH_CHANNEL=official-docker
I200407 19:12:29.961953 1 cli/start.go:1037  process identity: uid 0 euid 0 gid 0 egid 0
I200407 19:12:29.962112 1 cli/start.go:644  starting cockroach node
I200407 19:12:29.984168 21 storage/engine/rocksdb.go:622  opening rocksdb instance at "/cockroach/cockroach-data/cockroach-temp459468624"
I200407 19:12:31.482392 21 server/server.go:928  [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I200407 19:12:31.510299 21 storage/engine/rocksdb.go:622  opening rocksdb instance at "/cockroach/cockroach-data"
I200407 19:12:32.895637 21 server/config.go:502  [n?] 1 storage engine initialized
I200407 19:12:32.895814 21 server/config.go:505  [n?] RocksDB cache size: 128 MiB
I200407 19:12:32.895864 21 server/config.go:505  [n?] store 0: RocksDB, max size 0 B, max open file limit 1043576
W200407 19:12:33.068802 21 gossip/gossip.go:1517  [n?] no incoming or outgoing connections
W200407 19:12:33.115920 21 cli/start.go:996  neither --listen-addr nor --advertise-addr was specified.
The server will advertise "a161ea8f0270" to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I200407 19:12:33.132478 21 gossip/gossip.go:394  [n2] NodeDescriptor set to node_id:2 address:<network_field:"tcp" address_field:"a161ea8f0270:26257" > attrs:<> locality:<> ServerVersion:<major_val:19 minor_val:2 patch:0 unstable:0 > build_tag:"v19.2.5" started_at:1586286753132241700 cluster_name:"" sql_address:<network_field:"tcp" address_field:"a161ea8f0270:26257" > 
I200407 19:12:34.234273 21 server/node.go:431  [n2] initialized store [n2,s2]: disk (capacity=60 TiB, available=32 TiB, used=5.4 MiB, logicalBytes=0 B), ranges=0, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I200407 19:12:34.234557 21 storage/stores.go:240  [n2] read 1 node addresses from persistent storage
I200407 19:12:34.234982 21 server/node.go:645  [n2] connecting to gossip network to verify cluster ID...
W200407 19:12:35.116304 79 gossip/gossip.go:1300  [n2] invalid bootstrap address: &{typ:tcp addr:e7a2d7ddfe48:26257}, lookup e7a2d7ddfe48 on 127.0.0.11:53: no such host
I200407 19:12:36.628973 43 gossip/client.go:124  [n2] started gossip client to database_1:26257
I200407 19:12:36.667727 39 storage/stores.go:259  [n2] wrote 2 node addresses to persistent storage
I200407 19:12:37.047217 21 server/node.go:665  [n2] node connected via gossip and verified as part of cluster "ea35b6ad-0215-43e2-94d0-3ce953db1cc1"
I200407 19:12:37.048602 21 server/node.go:512  [n2] node=2: started with [<no-attributes>=/cockroach/cockroach-data] engine(s) and attributes []
I200407 19:12:37.065988 21 server/server.go:1514  [n2] starting http server at [::]:8080 (use: a161ea8f0270:8080)
I200407 19:12:37.066090 21 server/server.go:1521  [n2] starting grpc/postgres server at [::]:26257
I200407 19:12:37.066176 21 server/server.go:1522  [n2] advertising CockroachDB node at a161ea8f0270:26257
I200407 19:12:37.644554 80 gossip/gossip.go:1531  [n2] node has connected to cluster via gossip
I200407 19:12:37.672160 80 storage/stores.go:259  [n2] wrote 1 node addresses to persistent storage
W200407 19:12:38.100099 21 server/node.go:826  [n2,summaries] health alerts detected: {Alerts:[{StoreID:0 Category:METRICS Description:round-trip-latency-p90 Value:3.623878655e+09}]}
I200407 19:12:38.296134 43 gossip/client.go:129  [n2] closing client to n1 (database_1:26257): stopping outgoing client to n1 (database_1:26257); already have incoming
W200407 19:12:39.237136 99 storage/closedts/provider/provider.go:150  [ct-closer] unable to move closed timestamp forward: not live
github.com/cockroachdb/cockroach/pkg/storage.init.ializers
	/go/src/github.com/cockroachdb/cockroach/pkg/storage/node_liveness.go:57
runtime.main
	/usr/local/go/src/runtime/proc.go:188
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1337
W200407 19:12:39.934548 162 storage/node_liveness.go:559  [n2,liveness-hb] slow heartbeat took 2.9s
I200407 19:12:39.934908 162 storage/node_liveness.go:474  [n2,liveness-hb] heartbeat failed on epoch increment; retrying
I200407 19:12:40.887930 21 server/server.go:1590  [n2] done ensuring all necessary migrations have run
I200407 19:12:40.888431 21 server/server.go:1841  [n2] serving sql connections
I200407 19:12:40.891179 21 cli/start.go:803  [config] clusterID: ea35b6ad-0215-43e2-94d0-3ce953db1cc1
I200407 19:12:40.891422 21 cli/start.go:812  node startup completed:
CockroachDB node starting at 2020-04-07 19:12:40.8889379 +0000 UTC (took 11.7s)
build:               CCL v19.2.5 @ 2020/03/16 18:27:12 (go1.12.12)
webui:               http://a161ea8f0270:8080
sql:                 postgresql://root@a161ea8f0270:26257?sslmode=disable
RPC client flags:    /cockroach/cockroach <client cmd> --host=a161ea8f0270:26257 --insecure
logs:                /cockroach/cockroach-data/logs
temp dir:            /cockroach/cockroach-data/cockroach-temp459468624
external I/O path:   /cockroach/cockroach-data/extern
store[0]:            path=/cockroach/cockroach-data
status:              restarted pre-existing node
clusterID:           ea35b6ad-0215-43e2-94d0-3ce953db1cc1
nodeID:              2
I200407 19:12:41.978063 231 server/server_update.go:53  [n2] no need to upgrade, cluster already at the newest version
I200407 19:12:42.434116 233 sql/event_log.go:130  [n2] Event: "node_restart", target: 2, info: {Descriptor:{NodeID:2 Address:a161ea8f0270:26257 Attrs: Locality: ServerVersion:19.2 BuildTag:v19.2.5 StartedAt:1586286753132241700 LocalityAddress:[] ClusterName: SQLAddress:a161ea8f0270:26257} ClusterID:ea35b6ad-0215-43e2-94d0-3ce953db1cc1 StartedAt:1586286753132241700 LastUp:1586286460763601400}
I200407 19:12:47.106154 156 server/status/runtime.go:498  [n2] runtime stats: 106 MiB RSS, 151 goroutines, 92 MiB/32 MiB/135 MiB GO alloc/idle/total, 2.9 MiB/5.7 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (9x), 136 KiB/66 KiB (r/w)net
W200407 19:12:50.993016 219 server/node.go:826  [n2,summaries] health alerts detected: {Alerts:[{StoreID:0 Category:METRICS Description:liveness.heartbeatfailures Value:1}]}
I200407 19:12:54.869416 1 cli/start.go:865  received signal 'terminated'
I200407 19:12:54.875770 1 cli/start.go:930  initiating graceful shutdown of server
I200407 19:12:54.900584 426 util/stop/stopper.go:542  [server drain process] quiescing; tasks left:
1      [async] intent_resolver_ir_batcher
1      [async] intent_resolver_gc_batcher
1      [async] closedts-subscription
1      [async] closedts-rangefeed-subscriber
W200407 19:12:54.973164 70 vendor/google.golang.org/grpc/clientconn.go:1206  grpc: addrConn.createTransport failed to connect to {a161ea8f0270:26257 0  <nil>}. Err :connection error: desc = "transport: failed to write client preface: io: read/write on closed pipe". Reconnecting...
I200407 19:12:54.976623 426 storage/engine/rocksdb.go:762  closing rocksdb instance at "/cockroach/cockroach-data/cockroach-temp459468624"
I200407 19:12:55.212227 426 storage/engine/rocksdb.go:762  closing rocksdb instance at "/cockroach/cockroach-data"
I200407 19:12:55.253531 1 cli/start.go:976  server drained and shutdown completed
