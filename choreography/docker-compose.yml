version: "3.2"
services:
    database_1:
        container_name: database_1
        image: cockroachdb/cockroach:latest
        volumes:
        - ./data/database/node_1:/cockroach/cockroach-data
        command: start --insecure
        ports:
        - "26257:26257"

    database_2:
        container_name: database_2
        image: cockroachdb/cockroach:latest
        volumes:
        - ./data/database/node_2:/cockroach/cockroach-data
        command: start --insecure --join=database_1
        ports:
        - "26258:26257"

    order_1:
        container_name: order_1
        image: cockroachdb/cockroach:latest
        volumes:
        - ./data/database/order_1:/cockroach/cockroach-data
        command: start --insecure
        ports:
        - "26259:26257"
        - "8081:8080"
    order_2:
        container_name: order_2
        image: cockroachdb/cockroach:latest
        volumes:
        - ./data/database/order_2:/cockroach/cockroach-data
        command: start --insecure --join=order_2
        ports:
        - "26260:26257"

    payment_1:
        container_name: payment_1
        image: cockroachdb/cockroach:latest
        volumes:
        - ./data/database/payment_1:/cockroach/cockroach-data
        command: start --insecure
        ports:
        - "26261:26257"
        - "8082:8080"
    payment_2:
        container_name: payment_2
        image: cockroachdb/cockroach:latest
        volumes:
        - ./data/database/payment_2:/cockroach/cockroach-data
        command: start --insecure --join=payment_2
        ports:
        - "26262:26257"

    zookeeper:
        image: confluentinc/cp-zookeeper:5.4.0
        hostname: zookeeper
        container_name: zookeeper
        ports:
        - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
    broker:
        image: confluentinc/cp-kafka:5.4.0
        hostname: broker
        container_name: broker
        depends_on:
        - zookeeper
        ports:
        - "29092:29092"
        - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
            KAFKA_ADVERTISED_HOST_NAME: 0.0.0.0
            KAFKA_ADVERTISED: 0.0.0.0
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    mongo:
        image: mongo
        ports:
        - 27017:27017
        volumes:
        - ./data/mongo:/data/db
    jaeger:
        image: jaegertracing/all-in-one:latest
        ports:
            - "16686:16686"
            - "14268:14268"
    logger:
        image: meongbego/cinlog
        restart: always
        ports:
            - 3000:3000
        environment:
            - GIN_MODE=release
            - SERVER_ADDRESS=0.0.0.0
            - SERVER_PORT=3000
            - SERVER_TIMEZONE=Asia/Jakarta
            - MONGO_HOST=mongo
            - MONGO_PORT=27017
            - MONGO_DATABASE=logger
            - MONGO_USER=
            - MONGO_PASSWORD=
            - LOGGER_DRIVER=mongo
        command: ./main -e production
        depends_on:
            - mongo

    svc_user:
        image: meongbego/svc_user
        restart: always
        environment:
            - APP_NAME=users
            - DB_USER=root
            - DB_PASSWORD=
            - DB_HOST=database_1
            - DB_PORT=26257
            - DB_NAME=user
            - DB_USER_READ=root
            - DB_PASSWORD_READ=
            - DB_HOST_READ=database_2
            - DB_PORT_READ=26257
            - DB_NAME_READ=user
            - KAFKA_HOST=broker
            - KAFKA_PORT=9092
            - SWAGGER_SERVER_ADDRESS=http://0.0.0.0
            - LOGGER_URL=logger:3000
        command: ./main -e production
        depends_on:
            - database_1
            - database_2
            - zookeeper
            - broker
            - logger
    svc_order:
        image: meongbego/svc_order
        restart: always
        environment:
            - APP_NAME=order
            - DB_USER=root
            - DB_PASSWORD=
            - DB_HOST=order_1
            - DB_PORT=26257
            - DB_NAME=order
            - DB_USER_READ=root
            - DB_PASSWORD_READ=
            - DB_HOST_READ=order_2
            - DB_PORT_READ=26257
            - DB_NAME_READ=order
            - KAFKA_HOST=broker
            - KAFKA_PORT=9092
            - SWAGGER_SERVER_ADDRESS=http://0.0.0.0
            - LOGGER_URL=logger:3000
        command: ./main -e production
        depends_on:
            - order_1
            - order_2
            - zookeeper
            - broker
            - logger
    svc_payment:
        image: meongbego/svc_payment
        restart: always
        environment:
            - APP_NAME=payment
            - DB_USER=root
            - DB_PASSWORD=
            - DB_HOST=payment_1
            - DB_PORT=26257
            - DB_NAME=order
            - DB_USER_READ=root
            - DB_PASSWORD_READ=
            - DB_HOST_READ=payment_2
            - DB_PORT_READ=26257
            - DB_NAME_READ=payment
            - KAFKA_HOST=broker
            - KAFKA_PORT=9092
            - SWAGGER_SERVER_ADDRESS=http://0.0.0.0
            - LOGGER_URL=logger:3000
            - CRON_WAITING_VALUE=545251911825653761
        command: ./main -e production
        depends_on:
            - payment_1
            - payment_2
            - zookeeper
            - broker
            - logger
    api:
        image: meongbego/svc_gateway
        restart: always
        ports:
            - 80:80
        environment:
            - GIN_MODE=release
            - SERVER_ADDRESS=0.0.0.0
            - SERVER_PORT=80
            - SERVER_TIMEZONE=Asia/Jakarta
            - APP_NAME=gateway
            - KAFKA_HOST=broker
            - KAFKA_PORT=9092
            - SWAGGER_SERVER_ADDRESS=http://0.0.0.0
            - LOGGER_URL=logger:3000
        command: ./main -e production
        depends_on:
            - zookeeper
            - logger
            - broker
            - svc_order
            - svc_payment
            - svc_user
    
    krakend_ce:
        image: devopsfaith/krakend:1.1.1
        volumes:
            - ../krakend/etc/:/etc/krakend
        ports:
            - "1234:1234"
            - "8080:8080"
            - "8090:8090"
        depends_on:
            - jaeger
            - api
    kraken_designer:
        image: devopsfaith/krakendesigner:latest
        ports:
            - 8787:80

    